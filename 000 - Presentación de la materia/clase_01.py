# -*- coding: utf-8 -*-
"""Clase 01.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XSq1VOIiBOMWhD4q3fLIQrEJqTYS62vt

# Usando py5 en Google Colab

## Configuración del entorno

Por favor, ejecuta las siguientes celdas antes de comenzar.
"""

!pip install install-jdk --quiet
!python -c "import jdk; print('Java installed to', jdk.install('17'))"

!apt-get -qq install ca-certificates-java libxcursor1 libxrandr2 libxrender1 libxtst6 libxi6 xvfb > /dev/null # remove `> /dev/null` to see output

# Commented out IPython magic to ensure Python compatibility.
# Esto es muy importante, de lo contrario obtendrás el error de "headless mode".
!nohup /usr/bin/Xvfb :0 -screen 0 1024x768x24 &
# %env DISPLAY=:0

# No instales py5[extras] porque actualizará iPython y otros paquetes,
# lo que rompe la sesión y obliga a Colab a reiniciarse, reiniciando la instalación infinitamente.

!pip install py5 --quiet # elimina `--quiet` si quieres ver los detalles de la instalación

# Opcionalmente, puedes intentar instalar manualmente algunos extras...
# https://trimesh.org/install.html trimesh[easy] también instalará
# shapely y networkx. Ten en cuenta que matplotlib ya está preinstalado.

!pip install trimesh[easy] --quiet # elimina `--quiet` si quieres ver los detalles

"""## Now for some **py5** testing!"""

import py5
import py5_tools

def setup():
  py5.size(600, 600)
  py5.background(0)
  for _ in range(100):
      py5.fill(py5.random_choice(('red', 'green', 'blue')), 180)
      py5.square(py5.random(50, 500), py5.random(50, 500), py5.random(10, 30))

py5.run_sketch()

"""Unlike a local version of a notebook, running on Jupyter Lab, for instance, you won't see a window with your sketch running on it pop up.

But it is running and you can take a snapshot of it using `py5_tools.screenshot()`. Afterwards you can stop it using `py5.exit_sketch()`
"""

py5_tools.screenshot()

"""WOW!"""

# If you want to run it again, stop the sketch.
py5.exit_sketch()

"""## More env debugging resources"""

import py5_tools

py5_tools.jvm.get_jvm_debug_info() # si ejecutas esto antes de iniciar py5 obtendrás el JDK-11 por defecto del sistema

def setup():
    py5.size(500, 500)
    py5.fill("#FF0000")
    py5.rect(100, 150, 200, 300)
    py5.save("/img/testing/000_intro_py5.png")


py5.run_sketch()

py5_tools.screenshot()

py5.exit_sketch()

def setup():
    py5.size(400, 400)
    py5.background(200)
    print("py5 funcionando correctamente")

def draw():
    py5.fill(255, 0, 0)  # Rojo
    py5.no_stroke()
    py5.ellipse(200, 200, 100, 100)

py5.run_sketch()

py5_tools.screenshot()

py5.exit_sketch()

def setup():
    py5.size(400, 400)
    py5.color_mode(py5.HSB, 360, 100, 100)
    py5.background(200)
    print("py5 funcionando correctamente")


def draw():
    py5.fill(200, 80, 80)

py5.run_sketch()

py5_tools.screenshot()

py5.exit_sketch()

def setup():
    # Diferentes resoluciones
    py5.size(800, 600)  # HD 4:3
    py5.background(220)

    # Mostrar información de la ventana
    print(f"Ancho: {py5.width} píxeles")
    print(f"Alto: {py5.height} píxeles")
    print(f"Total píxeles: {py5.width * py5.height}")


py5.run_sketch()

py5_tools.screenshot()

py5.exit_sketch()

def setup():
    py5.size(600, 200)
    py5.color_mode(py5.RGB, 255)
    py5.no_stroke()


def draw():
    # Canal Rojo
    py5.fill(255, 0, 0)
    py5.rect(0, 0, 200, 200)

    # Canal Verde
    py5.fill(0, 255, 0)
    py5.rect(200, 0, 200, 200)

    # Canal Azul
    py5.fill(0, 0, 255)
    py5.rect(400, 0, 200, 200)


py5.run_sketch()

py5_tools.screenshot()

py5.exit_sketch()

def setup():
    py5.size(400, 400)
    py5.color_mode(py5.HSB, 360, 100, 100)
    py5.no_stroke()


def draw():
    for i in range(360):
        py5.fill(i, 100, 100)
        py5.rect(i, 0, 1, py5.height)


py5.run_sketch()

py5_tools.screenshot()



img = None


def setup():
    global img
    py5.size(800, 450)

    # Cargar imagen (colocar una imagen en la carpeta del proyecto)
    try:
        img = py5.load_image("img/imagen.jpg")  # Cambiar por imagen disponible
    except Exception as e:
        print(f"Error loading image: {e}")
        img = None


def draw():
    if img:
        # Mostrar imagen original
        py5.image(img, 0, 0, 400, 400)

        # Mostrar imagen redimensionada
        py5.image(img, 400, 0, 200, 200)

        # Información de la imagen
        py5.fill(0)
        py5.text(f"Original: {img.width} x {img.height}\nRedimensionada: 200 x 200", 10, 10)



def setup():
    py5.size(400, 400)
    py5.load_pixels()

    # Crear un patrón de píxeles
    for x in range(py5.width):
        for y in range(py5.height):
            # Calcular índice en el array de píxeles
            index = x + y * py5.width

            # Crear patrón de colores
            r = (x * 255) // py5.width
            g = (y * 255) // py5.height
            b = 128

            py5.pixels[index] = py5.color(r, g, b)

    py5.update_pixels()


py5.run_sketch()



img = None


def setup():
    global img
    py5.size(400, 400)
    py5.background(255)

    # Verificar que la imagen existe
    try:
        img = py5.load_image("img/imagen.jpg")
    except:
        print("⚠️  Error: Coloca una imagen en la carpeta 'img/imagen.jpg'")
        return

    # Procesar imagen en setup DESPUÉS de configurar el contexto
    if img is not None:
        procesar_imagen()


def procesar_imagen():
    """Procesa la imagen invirtiendo colores"""
    global im



# Crear un filtro que solo muestre un canal de color
import py5

img = None


def setup():
    global img
    py5.size(600, 200)
    img = py5.create_image(200, 200, py5.RGB)

    # Crear imagen de prueba
    img.load_pixels()
    for i in range(len(img.pixels)):
        img.pixels[i] = py5.color(py5.random(255), py5.random(255), py5.random(255))
    img.update_pixels()
def draw():
    # Imagen original
    py5.image(img, 0, 0)

    # Solo canal rojo
    py5.tint(255, 0, 0)
    py5.image(img, 200, 0)

    # Solo canal verde
    py5.tint(0, 255, 0)
    py5.image(img, 400, 0)

    py5.no_tint()


py5.run_sketch()



# Verificar instalación
import py5


def setup():
    py5.size(400, 300)
    py5.background(255)
    print("py5 funcionando correctamente")


def draw():
    py5.background(255)  # Limpiar el fondo en cada frame

    # Solo dibujar el círculo si el mouse está dentro de la ventana
    if 0 <= py5.mouse_x <= py5.width and 0 <= py5.mouse_y <= py5.height:
        py5.fill(255, 0, 0)
        py5.circle(py5.mouse_x, py5.mouse_y, 20)


py5.run_sketch()
import py5


def setup():
    py5.size(400, 400)


def draw():
    img = py5.load_image("img/imagen.jpg")
    py5.image(img, 0, 0, 400, 400)  # Especificar el tamaño de la imagen
    py5.apply_filter(py5.THRESHOLD, 0.8)


py5.run_sketch()